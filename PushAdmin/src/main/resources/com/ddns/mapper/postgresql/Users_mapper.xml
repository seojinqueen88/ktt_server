<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ddns.dao.Users_dao">

    <update id="update_users_p2ppriority_where_p2puid" parameterType="map">
		update users set p2p_priority = #{p2p_priority} where p2p_uid = #{p2p_uid}
	</update>

    <update id="update_users_service_user_where_jumin" parameterType="map" >
		update users set service_user = #{service_user} where jumin = #{jumin} 	
	</update>

    <delete id="delete_ddns_where_domain_jumin" parameterType="String">
		delete from users where jumin = #{jumin}
	</delete>

    <select id="count_users_all" resultType="int">
		select count(*) from users
	</select>   

    <select id="count_users_where_search_type" parameterType="map" resultType="int" >
    select count(*) from user_table_joint_management_user_log_1 where ${search_type} like CONCAT('%',#{search_word},'%')
      <!--  2023-01-31 이전 방식 -->
<!-- 		select count(*) from users where ${search_type} like CONCAT('%',#{search_word},'%') -->
	</select>
	
    <select id="select_users_where_search_type" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="10240">
select  *
		from (select count(*) over()  as count ,  row_number() over (order by ${sort} ${direction} nulls last) row_idx,
		  * from user_table_joint_management_user_log_1  where ${search_type} like CONCAT('%',#{search_word},'%') ) 
		  t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
    <!--  2023-01-31 이전 방식 -->
<!-- 		select  row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority,  -->
<!-- 		p2p_device, regtime, register_type,  empty1, jumin,eqcat,empty3,  -->
<!-- 		privateip, webport, service_no, service_open, service_user, tel2,  employee_no,ip_status ,otp_yn, -->
<!-- 		log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, -->
<!-- 		  * from user_table_1 where ${search_type} like CONCAT('%',#{search_word},'%') )  -->
<!-- 		  t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>

    <select id="count_users_where_registertype" parameterType="map" resultType="int" flushCache="true" useCache="false">
select count(*) from user_table_joint_management_user_log_1 where ${search_type} = #{search_word}
<!--  2023-01-31 이전 방식 -->
<!-- 		select count(*) from users where ${search_type} = #{search_word} -->
	</select>

    <select id="select_users_where_registertype" parameterType="map" resultType="java.util.LinkedHashMap"  fetchSize="10240" flushCache="true" useCache="false">
	select * from
		 (select count(*) over()  as count , row_number() over (order by ${sort} ${direction} nulls last) row_idx, * 
		  from user_table_joint_management_user_log_1 where ${search_type} = #{search_word}) t1 
		where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
  <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority,  -->
<!-- 		p2p_device, regtime, register_type,  empty1, jumin,eqcat,empty3,  -->
<!-- 		privateip, webport, service_no, service_open, service_user, tel2,  employee_no,ip_status ,otp_yn, -->
<!-- 		log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		from -->
<!-- 		 (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, *  -->
<!-- 		  from user_table_1 where ${search_type} = #{search_word}) t1  -->
<!-- 		where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>

  <select id="count_users_where_otp_yn" parameterType="map" resultType="int">
		select count(*) from users where ${search_type} = #{search_word}
	</select>

    <select id="select_users_where_otp_yn" parameterType="map" resultType="java.util.LinkedHashMap"  fetchSize="10240">
select *
		from
		 (select count(*) over()  as count , row_number() over (order by ${sort} ${direction} nulls last) row_idx, * 
		  from user_table_joint_management_user_log_1 where ${search_type} = #{search_word}) t1 
		where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		  <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority,  -->
<!-- 		p2p_device, regtime, register_type,  empty1, jumin, eqcat, empty3,  -->
<!-- 		privateip, webport, service_no, service_open, service_user, tel2,  employee_no,ip_status ,otp_yn, -->
<!-- 		log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		from -->
<!-- 		 (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, *  -->
<!-- 		  from user_table_1 where ${search_type} = #{search_word}) t1  -->
<!-- 		where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>
	
    <select id="count_users_where_serviceno" parameterType="String" resultType="int">
    select count(*) from user_table_joint_management_user_log_1 where service_no = #{service_no}
      <!--  2023-01-31 이전 방식 -->
<!-- 		select count(*) from users where service_no = #{service_no} -->
	</select>
    <select id="select_users_where_serviceno" parameterType="map" resultType="java.util.LinkedHashMap"  fetchSize="10240">
select *
		 from (select count(*) over()  as count , row_number() over (order by ${sort} ${direction} nulls last) row_idx, 
		 * from user_table_joint_management_user_log_1  where service_no = #{service_no}) t1 where row_idx 
		 between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		  <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, -->
<!-- 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,   -->
<!-- 		employee_no, ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		 from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx,  -->
<!-- 		 * from user_table_1 where service_no = #{service_no}) t1 where row_idx  -->
<!-- 		 between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>

    <select id="count_users_where_serviceno_and_search_type" parameterType="map" resultType="int">
    
    select count(*) from user_table_joint_management_user_log_1 where service_no = #{service_no} and ${search_type} like CONCAT('%',#{search_word},'%')
     <!--  2023-01-31 이전 방식 -->
<!-- 		select count(*) from users where service_no = #{service_no} and ${search_type} like CONCAT('%',#{search_word},'%') -->
	</select>
    <select id="select_users_where_serviceno_and_search_type" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="10240">
select *
		 from (select count(*) over()  as count , row_number() over (order by ${sort} ${direction} nulls last) row_idx
		, * from user_table_joint_management_user_log_1
		   where service_no = #{service_no} and ${search_type} CONCAT('%',#{search_word},'%'))
		    t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		      <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, -->
<!-- 		register_type,  empty1,jumin, eqcat,empty3,   privateip, webport, service_no, service_open, service_user, tel2,   -->
<!-- 		employee_no, ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		 from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx -->
<!-- 		, * from user_table_1  -->
<!-- 		   where service_no = #{service_no} and ${search_type} CONCAT('%',#{search_word},'%')) -->
<!-- 		    t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>

    <select id="count_users_where_serviceno_and_registertype" parameterType="map" resultType="int">
    select count(*) from user_table_joint_management_user_log_1 where service_no = #{service_no} and ${search_type} = #{search_word}
 <!--  2023-01-31 이전 방식 -->
<!-- 		select count(*) from users where service_no = #{service_no} and ${search_type} = #{search_word} -->
	</select>
    <select id="select_users_where_serviceno_and_registertype" parameterType="map" resultType="java.util.LinkedHashMap"  fetchSize="10240">
	select *
		 from ( 
		select count(*)  as count , row_number() over (order by ${sort} ${direction} nulls last) as row_idx ,*
		from user_table_joint_management_user_log_1 where service_no = #{service_no} and ${search_type} = #{search_word})
		t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		 <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, -->
<!-- 		register_type,  empty1,jumin, eqcat, empty3, privateip, webport, service_no, service_open, service_user, tel2,   -->
<!-- 		employee_no, ip_status ,otp_yn,log_call_kttddns_serviceno_to_app_deviceinfo -->
<!-- 		 from (  -->
<!-- 		select row_number() over (order by ${sort} ${direction} nulls last) as row_idx ,* -->
<!-- 		from user_table_1 where service_no = #{service_no} and ${search_type} = #{search_word}) -->
<!-- 		t1 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) -->
	</select>
	
    <select id="select_users_all_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="50000">
 		 
 		select  row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status, otp_yn, to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time ,
		<!-- (t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo ,  -->
		
		<!-- 
		COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
         -->
        t1.access_rule AS access_rule
		 from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, *
		   from user_table_joint_management_user_log_0) as t1
		   
		    <!--  2023-01-31 이전 방식 -->
        <!--  select  row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,   
 		employee_no, ip_status, otp_yn	,to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo 
 		 from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx,  
 		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,   
 		employee_no, ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		   from user_table_0) as t1  -->
        <if test="offset !=null">
		offset #{offset} limit 100000
		</if>
    </select>


	<select id="select_users_all_excel_current_page" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="50000">
		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, 
		p2p_device, regtime, register_type,  empty1, jumin,eqcat,empty3, 
		privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no,ip_status ,otp_yn ,last_access_master_key_time , 
		<!-- employee_no,ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo ,  -->
		<!-- 
		COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
        
         -->
        t1.access_rule AS access_rule
		from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * 
			  from user_table_joint_management_user_log_0) as t1
		 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10) 
		
<!--  2023-01-31 이전 방식 -->
 		<!-- select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority,  
 		p2p_device, regtime, register_type,  empty1, jumin,eqcat,empty3,  
 		privateip, webport, service_no, service_open, service_user, tel2,  employee_no,ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx,   
 		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority,  
 		p2p_device, regtime, register_type,  empty1, jumin,eqcat,empty3, privateip, webport,  
 		service_no, service_open, service_user, tel2,  employee_no,ip_status ,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
		from user_table_0) as t1 
		where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)  -->
	</select>

    <select id="select_users_all" parameterType="map" resultType="map" fetchSize="50000">
    select * from (
    select count(*) over()  as count, row_number() over (order by ${sort} ${direction} nulls last)as row_idx , * from select_users_all_view
    ) as t where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
  
	</select>


    <select id="select_users_where_search_type_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="10240">
		 
		select row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		CASE
            WHEN t1.register_type = '0' THEN '신규(0)'::text
            WHEN t1.register_type = '1' THEN '설치변경(1)'::text
            WHEN t1.register_type = '2' THEN '유지보수 동일교체(2)'::text
            WHEN t1.register_type = '3' THEN 'AD (3)'::text
            WHEN t1.register_type = '4' THEN '일반 (4)'::text
            WHEN t1.register_type = '5' THEN '고객 [영상 LIB] (5)'::text
            WHEN t1.register_type = '6' THEN '고객 통합 앱 서버 (6)'::text
            WHEN t1.register_type = '7' THEN '기존 등록 (7)'::text
            ELSE to_char(t1.register_type::double precision, '00009'::text)
        END AS register_type
        ,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status, 
		  CASE
            WHEN t1.otp_yn = '0' THEN 'OTP인증 안함(0)'::text
            WHEN t1.otp_yn = '1' THEN '기존사용자(1)'::text
            WHEN t1.otp_yn = '2' THEN '관리자변경(2)'::text
            WHEN t1.otp_yn = '3' THEN 'OTP 인증완료(3)'::text
            ELSE to_char(t1.otp_yn::double precision, '9'::text)
        END AS otp_yn,
        to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time,
        <!-- to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo, -->
        
        <!-- 
        	COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
        -->
        
        t1.access_rule AS access_rule from (
		select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * 
		  from user_table_joint_management_user_log_2  where  ${search_type} like CONCAT('%',#{search_word},'%') ) t1
		   <!--  2023-01-31 이전 방식 -->
 		<!-- select row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
		
		CASE
            WHEN t1.register_type = '0' THEN '신규(0)'::text
            WHEN t1.register_type = '1' THEN '설치변경(1)'::text
            WHEN t1.register_type = '2' THEN '유지보수 동일교체(2)'::text
            WHEN t1.register_type = '3' THEN 'AD (3)'::text
            WHEN t1.register_type = '4' THEN '일반 (4)'::text
            WHEN t1.register_type = '5' THEN '고객 [영상 LIB] (5)'::text
            WHEN t1.register_type = '6' THEN '고객 통합 앱 서버 (6)'::text
            WHEN t1.register_type = '7' THEN '기존 등록 (7)'::text
            ELSE to_char(t1.register_type::double precision, '00009'::text)
        END AS register_type
        ,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status, 
		  CASE
            WHEN t1.otp_yn = '0' THEN 'OTP인증 안함(0)'::text
            WHEN t1.otp_yn = '1' THEN '기존사용자(1)'::text
            WHEN t1.otp_yn = '2' THEN '관리자변경(2)'::text
            WHEN t1.otp_yn = '3' THEN '⊚OTP 인증완료(3)'::text
            ELSE to_char(t1.otp_yn::double precision, '9'::text)
        END AS otp_yn,to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo , accress_rule
         from (
		select row_number() over (order by ${sort} ${direction} nulls last) row_idx, 
		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo, accress_rule	   
		  from user_table_2 where  ${search_type} like CONCAT('%',#{search_word},'%') ) t1 
		  -->
		  	<choose>
			<when test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
			</when>
			<when  test="offset !=null">
				offset #{offset} limit 100000
			</when>
		</choose>
	</select>

    <select id="select_users_where_registertype_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="10240">  
        select row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		CASE
            WHEN t1.register_type = '0' THEN '신규(0)'::text
            WHEN t1.register_type = '1' THEN '설치변경(1)'::text
            WHEN t1.register_type = '2' THEN '유지보수 동일교체(2)'::text
            WHEN t1.register_type = '3' THEN 'AD (3)'::text
            WHEN t1.register_type = '4' THEN '일반 (4)'::text
            WHEN t1.register_type = '5' THEN '고객 [영상 LIB] (5)'::text
            WHEN t1.register_type = '6' THEN '고객 통합 앱 서버 (6)'::text
            WHEN t1.register_type = '7' THEN '기존 등록 (7)'::text
            ELSE to_char(t1.register_type::double precision, '00009'::text)
        END AS register_type
        ,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status, 
		  CASE
            WHEN t1.otp_yn = '0' THEN 'OTP인증 안함(0)'::text
            WHEN t1.otp_yn = '1' THEN '기존사용자(1)'::text
            WHEN t1.otp_yn = '2' THEN '관리자변경(2)'::text
            WHEN t1.otp_yn = '3' THEN 'OTP 인증완료(3)'::text
            ELSE to_char(t1.otp_yn::double precision, '9'::text)
        END AS otp_yn,
        to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time,
        <!-- to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo,-->
        
        <!-- 
          COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 , 
         -->
        t1.access_rule AS access_rule
         from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, *   
		 from user_table_joint_management_user_log_2  where ${search_type} = #{search_word}) t1
		 
		  <!--  2023-01-31 이전 방식 -->
<!-- 		select row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
		CASE
            WHEN t1.register_type = '0' THEN '신규(0)'::text
            WHEN t1.register_type = '1' THEN '설치변경(1)'::text
            WHEN t1.register_type = '2' THEN '유지보수 동일교체(2)'::text
            WHEN t1.register_type = '3' THEN 'AD (3)'::text
            WHEN t1.register_type = '4' THEN '일반 (4)'::text
            WHEN t1.register_type = '5' THEN '고객 [영상 LIB] (5)'::text
            WHEN t1.register_type = '6' THEN '고객 통합 앱 서버 (6)'::text
            WHEN t1.register_type = '7' THEN '기존 등록 (7)'::text
            ELSE to_char(t1.register_type::double precision, '00009'::text)
        END AS register_type
        ,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status,
		 CASE
            WHEN t1.otp_yn = '0' THEN 'OTP인증 안함(0)'::text
            WHEN t1.otp_yn = '1' THEN '기존사용자(1)'::text
            WHEN t1.otp_yn = '2' THEN '관리자변경(2)'::text
            WHEN t1.otp_yn = '3' THEN '⊚OTP 인증완료(3)'::text
            ELSE to_char(t1.otp_yn::double precision, '9'::text)
        END AS otp_yn,
        to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo , accress_rule
         from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, 
		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status,otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo , accress_rule	    
		 from user_table_2 where ${search_type} = #{search_word}) t1  -->
		<choose>
			<when test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
			</when>
			<when  test="offset !=null">
				offset #{offset} limit 100000
			</when>
		</choose>
	</select>
    <select id="select_users_where_serviceno_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="20000">
     
     select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status ,  otp_yn ,
		to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time,
		<!-- to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo,
		 -->
		
		
		<!-- 
			COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
         -->
        t1.access_rule AS access_rule
        from 
		(select row_number() over (order by ${sort} ${direction} nulls last) row_idx,*
		 from user_table_joint_management_user_log_0  where service_no = #{service_no}
		  
		   <!--  2023-01-31 이전 방식 -->
         <!-- 
         select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2, 
 		employee_no, ip_status ,  otp_yn , 
 		to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		 from  
 		(select row_number() over (order by ${sort} ${direction} nulls last) row_idx, 
 		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
 		employee_no, ip_status , otp_yn  ,log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		 from user_table_0 where service_no = #{service_no} 
 		  -->
		<choose>
			<when test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
			</when>
			<when  test="offset !=null">
				offset #{offset} limit 100000
			</when>
		</choose>
       ) t1
    </select>

    <select id="select_users_where_serviceno_and_search_type_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="20000">
		
		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status , otp_yn,		
		to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time,
		<!--to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo,
		 -->
		<!--  
			COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
        -->
        t1.access_rule AS access_rule
         from (
		select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from user_table_joint_management_user_log_0
		 where service_no = #{service_no} and ${search_type} like CONCAT('%',#{search_word},'%') ) as t1 
		 
		   <!--  2023-01-31 이전 방식 -->
 		<!-- 
 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
 		employee_no, ip_status , otp_yn,to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo, access_rule
 		 from (
		select row_number() over (order by ${sort} ${direction} nulls last) row_idx,  
 		domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,   
 		employee_no, ip_status , otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo from user_table_0  , access_rule
 		 where service_no = #{service_no} and ${search_type} like CONCAT('%',#{search_word},'%') ) as t1  
 		 --> 
		 <if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	</select>
    <select id="select_users_where_serviceno_and_registertype_excel" parameterType="map" resultType="java.util.LinkedHashMap" fetchSize="20000">
	 
	select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime,
		register_type,  empty1,jumin, eqcat,   empty3, privateip, webport, service_no, service_open, service_user, tel2,  
		employee_no, ip_status , otp_yn,
		<!-- last_access_master_key_time,  -->
		<!--to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo,  -->
		to_char(t1.last_access_master_key_time , 'YYYY-MM-DD HH24:MI:SS'::text) as last_access_master_key_time,
		<!-- 
			COALESCE(t1.app_access_id, '') AS app_access_id, 
        CASE
                WHEN t1.app_access_id IS NOT NULL THEN 
                case
			WHEN t1.app_register_type = '0' then '자동등록' 
			WHEN t1.app_register_type = '1' then '수동등록' 
			WHEN t1.app_register_type = '2' then 'SmartEyesPro'
			else t1.app_register_type end 
            ELSE 
			''
        END AS app_register_type ,
         CASE
            WHEN (app_access_id IS NOT NULL and app_access_id !='') THEN to_char(app_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS app_date ,
        COALESCE(t1.cms_access_id, '') AS cms_access_id, 
        CASE
            WHEN t1.cms_access_id IS NOT NULL THEN 
                case
				WHEN t1.cms_register_type = '0' then 'GiGaEyesPro' 
				WHEN t1.cms_register_type = '1' then 'Olleh CCTV ' 
				WHEN t1.cms_register_type = '2' then 'CMS LITE '
				else t1.cms_register_type  end 
            ELSE 
			''
        END AS cms_register_type ,
         CASE
            WHEN (cms_access_id IS NOT NULL and cms_access_id !='') THEN to_char(cms_date, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS cms_date ,
        t1.device_accesslog_type_t0 AS device_accesslog_type_t0, 
        t1.device_accesslog_protocol_type_t0 AS device_accesslog_protocol_type_t0 ,
         CASE
            WHEN (device_accesslog_type_t0 IS NOT NULL and device_accesslog_type_t0 !='') THEN to_char(device_protocol_date_t0, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t0 ,
          t1.device_accesslog_type_t1 AS device_accesslog_type_t1, 
        t1.device_accesslog_protocol_type_t1 AS device_accesslog_protocol_type_t1 ,
         CASE
            WHEN (device_accesslog_type_t1 IS NOT NULL and device_accesslog_type_t1 !='') THEN to_char(device_protocol_date_t1, 'YYYY-MM-DD HH24:MI:SS')
            ELSE '-'
        END AS device_protocol_date_t1 ,
         -->
        t1.access_rule AS access_rule
         from (
		select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from user_table_joint_management_user_log_0  where 
		 
		 <!--  2023-01-31 이전 방식 -->
 		<!-- 
 		select row_idx , domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
 		register_type,  empty1,jumin, eqcat,   empty3, privateip, webport, service_no, service_open, service_user, tel2,   
 		employee_no, ip_status , otp_yn,to_char(t1.log_call_kttddns_serviceno_to_app_deviceinfo , 'YYYY-MM-DD HH24:MI:SS'::text) as log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		 from ( 
 		select row_number() over (order by ${sort} ${direction} nulls last) row_idx, domain , maker, empty2,  addr, port,  p2p_uid, p2p_priority, p2p_device, regtime, 
 		register_type,  empty1,jumin, eqcat, empty3,  privateip, webport, service_no, service_open, service_user, tel2,  
 		employee_no, ip_status , otp_yn ,log_call_kttddns_serviceno_to_app_deviceinfo , access_rule
 		from user_table_0 where
 		 -->  
		<choose>
			<when test="search_type !=null and search_type.equals('register_type')">
				service_no = #{service_no} and ${search_type} = CONCAT(#{search_word} ,'%')
			</when>
			<otherwise>
				service_no = #{service_no} and ${search_type} = #{search_word} )
			</otherwise>
		</choose>
		 as t1 
		 <if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	</select>

    <select id="select_users_network_where_mac" parameterType="String" resultType="map" fetchSize="10240">
		select rtrim(domain) as domain, rtrim(addr) as addr, rtrim(port) as port, rtrim(webport) as webport from users where jumin = #{mac}
	</select>

    <select id="select_users_p2p_where_mac" parameterType="String" resultType="map"  fetchSize="10240">
		select p2p_uid, p2p_priority, p2p_device from users where jumin = #{mac}
	</select>


    <!-- P2P CONTROLLER -->

    <update id="update_users_p2p_insert" parameterType="map">
		update users set p2p_uid = #{p2p_uid}, p2p_priority = #{p2p_priority}, p2p_device = 0 where jumin = #{mac}
	</update>

    <update id="update_users_p2p_delete" parameterType="String">
		update users set p2p_uid = '', p2p_priority = 0, p2p_device = 0 where jumin = #{mac}
	</update>

    <update id="update_users_p2p_delete_where_in_mac" parameterType="map">
		update users set p2p_uid = '', p2p_priority = 0, p2p_device = 0 where jumin in (${mac_list_string})
	</update>

    <select id="select_users_p2puid_where_mac" parameterType="String" resultType="String" fetchSize="1024">
		select p2p_uid from users where jumin = #{mac}
	</select>

    <select id="select_users_p2puid_where_in_mac" parameterType="map" resultType="String" fetchSize="1024">
		select p2p_uid from users where jumin in (${mac_list_string})
	</select>


    <!-- REGISTER CONTROLLER -->

    <select id="select_users_where_register_mac" parameterType="String" resultType="map" fetchSize="10240">
		select rtrim(maker) as "maker", rtrim(eqcat) as "eqcat", rtrim(empty2) as "model", rtrim(jumin) as "register_mac", rtrim(domain) as "domain", rtrim(systemid) as "system_id" from users where jumin = #{register_mac}
	</select>
    <!-- 20220525 / 추가 / 서비스 번호 웹 내 수정 기능 추가 -->
    <update id="update_users_service_no_where_mac" parameterType="map">
		update users set service_no = #{serviceNo}, employee_no = #{empNo} where jumin = #{jumin}
	</update>
    <!-- END -->
    <select id="select_user_registerType_where_mac" parameterType="map" resultType="int" >
		select register_type from users where jumin = #{mac}
	</select>
	 <!-- 20221128 / OTP 인증 수정 기능 추가 -->
    <update id="update_users_service_no_otp_yn" parameterType="map">
    <choose>
			<when test="OTP_ADMIN_ID!=null and !OTP_ADMIN_ID.equals('')">
			update users set otp_yn = #{otp_yn} ,OTP_ADMIN_ID=#{OTP_ADMIN_ID} where jumin = #{mac}
			</when>
			<otherwise>
			update users set otp_yn = #{otp_yn} where jumin = #{mac}
			</otherwise>
		</choose>
		
	</update>
	
	 <!-- 20230519 / ACCESS RULE  수정 기능 추가 -->
    <update id="update_users_service_access_rule" parameterType="map">
    <choose>
			<when test="ADMIN_ID!=null and !ADMIN_ID.equals('')">
			update users set access_rule = #{access_rule} ,OTP_ADMIN_ID=#{ADMIN_ID} where jumin = #{mac}
			</when>
			<otherwise>
			update users set access_rule = #{access_rule} where jumin = #{mac}
			</otherwise>
		</choose>
		
	</update>
	 <select id="select_user_registerType_where_otp_yn" parameterType="map" resultType="int">
		select otp_yn from users where jumin = #{mac}
	</select>
	
</mapper>