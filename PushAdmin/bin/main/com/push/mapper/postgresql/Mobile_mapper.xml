<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.push.dao.Mobile_dao">
	<select id="count_mobile_all" resultType="int">
		select count(*) from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, a.create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1
	</select>
	<select id="select_mobile_all" parameterType="map" resultType="map">
		select * from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, to_char(a.create_date, 'YYYY-MM-DD HH24:MI:SS') as create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1) t2 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
	</select>

	<select id="count_mobile_where_user_id" parameterType="String" resultType="int">
		select count(*) from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, a.create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.user_id like #{user_id} group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1
	</select>
	<select id="select_mobile_where_user_id" parameterType="map" resultType="map">
		select * from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, to_char(a.create_date, 'YYYY-MM-DD HH24:MI:SS') as create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.user_id like #{user_id} group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1) t2 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
	</select>

	<select id="count_mobile_where_mobile_type" parameterType="int" resultType="int">
		select count(*) from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, a.create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.mobile_type=#{mobile_type} group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1
	</select>
	<select id="select_mobile_where_mobile_type" parameterType="map" resultType="map">
		select * from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, to_char(a.create_date, 'YYYY-MM-DD HH24:MI:SS') as create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.mobile_type=#{mobile_type} group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1) t2 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
	</select>

	<select id="count_mobile_where_create_date" parameterType="map" resultType="int">
		select count(*) from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, a.create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.create_date >= date '${start_create_date}' and a.create_date &lt; date '${end_create_date}' + interval '1 day' group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1
	</select>
	<select id="select_mobile_where_create_date" parameterType="map" resultType="map">
		select * from (select row_number() over (order by ${sort} ${direction} nulls last) row_idx, * from (select a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, count(b.mobile_idx) register_count, to_char(a.create_date, 'YYYY-MM-DD HH24:MI:SS') as create_date from mobile a left join register b on a.mobile_idx = b.mobile_idx where a.create_date >= date '${start_create_date}' and a.create_date &lt; date '${end_create_date}' + interval '1 day' group by a.token_id, a.user_id, a.mobile_type, a.lang_cd, a.app_num, a.app_ver, a.create_date) t1) t2 where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
	</select>
  
	<select id="select_mobile_all_excel" parameterType="map" resultType="java.util.LinkedHashMap">
		select * from(
		select row_number() over (order by ${sort} ${direction} nulls last) as row_idx,token_id,
		 user_id, mobile_type, lang_cd, app_num, app_ver, register_count, create_date from mobile_join_view_0 )t1
		 <if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	</select>
	<select id="select_mobile_where_user_id_excel" parameterType="map" resultType="java.util.LinkedHashMap">
		select *
		 from (
			select row_number() over (order by ${sort} ${direction} nulls last) as row_idx,token_id,
		 user_id,    
		  CASE
            WHEN mobile_type = 2 THEN 'iOS'::text
            WHEN mobile_type = 1 THEN 'Android'::text
            ELSE to_char(mobile_type, '009'::text)
        END AS mobile_type
        , lang_cd, app_num, app_ver, register_count, create_date  
		 from mobile_join_view_0 where user_id like CONCAT('%',#{user_id},'%' )  ) t2
		<if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	</select>
	<select id="select_mobile_where_mobile_type_excel" parameterType="map" resultType="java.util.LinkedHashMap">
		select  *
		 from (
			select row_number() over (order by ${sort} ${direction} nulls last) as row_idx,token_id,
		 user_id,  
		 CASE
            WHEN mobile_type = 2 THEN 'iOS'::text
            WHEN mobile_type = 1 THEN 'Android'::text
            ELSE to_char(mobile_type, '009'::text)
        END AS mobile_type,
         lang_cd, app_num, app_ver, register_count, create_date from mobile_join_view_0 where mobile_type=#{mobile_type}) t2
		 <if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	
	</select>
	<select id="select_mobile_where_create_date_excel" parameterType="map" resultType="java.util.LinkedHashMap">
	select row_idx,token_id, user_id, mobile_type, lang_cd , app_num , app_ver , register_count, create_date
		 from (
			select row_number() over (order by ${sort} ${direction} nulls last) as row_idx,
		 token_id,user_id, 
		CASE
            WHEN mobile_type = 2 THEN 'iOS'::text
            WHEN mobile_type = 1 THEN 'Android'::text
            ELSE to_char(mobile_type, '009'::text)
        END AS mobile_type,
         lang_cd, app_num, app_ver, register_count, 
         to_char(create_date, 'YYYY-MM-DD HH24:MI:SS'::text) as create_date
          from mobile_join_view_1
			where create_date >= date '${start_create_date}' and create_date &lt; date '${end_create_date}' + interval '1 day' 
			 ) t2
		 <if test="page !=null and !page.equals('')">
			where row_idx between ((#{page} - 1) * 10) + 1 and (#{page} * 10)
		</if>
	</select>

	<select id="select_mobile_where_mobile_idx" parameterType="int" resultType="mobile">
		select * from mobile where mobile_idx=#{mobile_idx}
	</select>
</mapper>